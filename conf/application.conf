# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="jC`1@M4?A/_rpds0UV<Jc96=1Te]Kwv`BFvfDgfia0TH:gq?`=xN3^GC<=n[E_:>"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global="com.lucidchart.open.nark.Global"

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

db.main.driver="com.mysql.jdbc.Driver"
db.main.url="jdbc:mysql://localhost/nark"
db.main.user="dev"
db.main.password="dev"
db.main.partitionCount="1"
db.main.maxConnectionsPerPartition="10"
db.main.minConnectionsPerPartition="1"
db.main.acquireIncrement="1"
db.main.acquireRetryAttempts="10"
db.main.acquireRetryDelay="100"
db.main.connectionTimeout="100"
db.main.idleMaxAge="300000"
db.main.maxConnectionAge="3600000"
db.main.disableJMX="true"
db.main.idleConnectionTestPeriod="60000"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root="ERROR"

# Logger used by the framework:
logger.play="INFO"

# Logger provided to your application:
logger.application="DEBUG"

# StatsD
# ~~~~~
statsd.prefix="applications.nark"
statsd.host="127.0.0.1"
statsd.port="8125"
statsd.multi="true"
statsd.buffer="1024"

# CSRF
# ~~~~~
csrf.token.name = "csrf"
csrf.cookie.name = "csrf"
csrf.tokenInBody = "true"
csrf.cookie.createIfNotFound = "true"
csrf.unsafe.methods = ["POST", "PUT"]

# Application Context
# ~~~~~
application.context = "/"
application.domain = "localhost:9000/"

# Sessions
# ~~~~~
# session.cookieName = "PLAY_SESSION"
# session.secure = "false"
# session.maxAge = "86400"
# session.httpOnly = "true"
# session.domain = "www.example.com"
flash.cookieName = "appflash"

# Mailer
# ~~~~~
mailer.enabled = "true"
mailer.debug = "false"
mailer.smtp.host = "localhost"
mailer.smtp.port = "25"
mailer.smtp.user = ""
mailer.smtp.pass = ""
mailer.fromemail = "garbage@example.com"

# Authentication
# ~~~~~
auth.cookie.name = "auth"
auth.cookie.path = "/"
#auth.cookie.domain = "localhost"
auth.cookie.secure = "false"
auth.cookie.ttl = "86400"
auth.cookie.remembermeMaxAge = "1209600"

# OpenID
# ~~~~~
openid.nonce.maxAgeSeconds = "86400"

# Graphite
# ~~~~~
graphite.proto = "https"
graphite.host = "graphite.lucidchart.com"
graphite.port = "443"
graphite.timeoutMS.metrics.server = "300000"
graphite.timeoutMS.data.server = "300000"

# the granularity, in seconds, of graphite data storage. used for 'auto' data intervals.
graphite.granularitySeconds = "30"

# Host Discovery w/Graphite
# ~~~~~
# # of seconds a host must report or not report metrics to be called "up" or "down"
hostdiscovery.statechangetime = "300"
hostdiscovery.frequency = "600"
hostdiscovery.patterns = [
	{
		name = "all servers"
		target = "stats.*.servers.*.system.cpu.cpus"
		extract = "^stats\\.[^\\.]*\\.servers\\.(.*)\\.system\\.cpu\\.cpus$"
		reverse = "false"
	}
]

# Dashboard History
# ~~~~~
dashboardhistory.count = "10"

# Searches
# ~~~~~
search.limit = "25"


# Alert Checking
# ~~~~~
alerts.numberOfWorkers = "5"
alerts.initialThreadCount = "1"
alerts.maxThreadCount = "10"
alerts.initialSleepSeconds = "1"
alerts.maxSleepSeconds = "60"
alerts.backoffMultiplier = "2"
alerts.secondsToCheckData = "60"
alerts.maxConsecutiveFailures = "5"
alerts.consecutiveFailuresMultiplier = "10"
alerts.alertsPerWorker= "1"
alerts.cleanupSeconds = "60"
alerts.cleanupFrequencySeconds = "300"

# Alert Propagation with Dynamic Alerts
# ~~~~~
dynamic.frequency = "600"
dynamic.statechangetime = "300"

# Akka
# ~~~~~
play {
	akka {
		actor {
			graphite {
				fork-join-executor {
					parallelism-min = 4
					parallelism-max = 100
					parallelism-factor = 10.0
				}
			}
		}
	}
}

#Plugins to load
plugins.workers.count = 5

plugins.names = [
	"PagerDuty"
]
plugins.PagerDuty.class = "com.lucidchart.open.nark.pagerduty.PagerDuty"
